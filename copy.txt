저장소 설정


git init : 해당 위치에 로컬 저장소 생성
git config [ user.name or user.email ] : 사용자 정보 등록
git config -- list : 저장소 설정 전체 출력
git config --enset [ user.name or user.email ] : 사용자 정보 삭제

git status : 상태 정보
git show [ hashID || head ] : 특정 커밋 표시

git add [파일 이름 || 디렉토리 이름 || . ] : 스테이징 영역에 올리기

git commit -m "...."  :  내용 저장소에 전달
git commit --amend -m "...."  :  이전 커밋에 추가하여 커밋

git diff : 커밋과 unStaged 파일 비교
git diff --staged : 커밋과 스테이징 파일 비교
git diff hashID  hashID : 커밋 비교

git reflog : HEAD가 참조한 커밋 이력 출력

git reset [파일명] : 스테이징 영역에서 되돌리기
git reset hashID : master 참조를 변경
	hard : WD- SA- R-
	mixed  : WD+ SA- R-
	soft : WD+ SA+ R-

git checkout hashID : 특정 커밋으로 head 참조 변경
git checkout master : 최신으로 변경

git remote add RR-name RR-address : 원격 저장소 연동
git remote rm RR-name  :원격 저장소 연결 해제

git clone R-url R-name : 원격저장소 복사

git push -u [RR-name LB-name] : 로컬 브랜치가 원격 저장소 추적 및 저장
git pull [RR-name LB-name] : 원격저장소 내용 로컬에 업데이트
( pull = fetch + merge )

git fetch : 원격 저장소 정보 불러오기
git log --all --oneline : 전체 변경사항 확인
git merge  branch-name : 브런치 병합 
git merge --abort : 병합을 취소

git revert hashID : 커밋 내용을 되돌림

git blame [hahsID] [file-name] : 특정 커밋에서 파일 작성 정보 확인 

git stash : 스태시 영역에 작업 내용 저장, 변경 부분 복원
git stash save [name] : 이름붙여서 저장
git stash list : 목록 나열
git stash apply [stash-index] : 스태시 영역의 작업내용 적용
git stash drop [stash-index] : 스태시 영역의 작업내용 삭제
git stash pop [stash-index] : 스테시 영역의 작업 내용 적용 및 삭제
git stash clear : 스테시 영역의 작업 내용 전부 삭제

git branch [branch name] : 브런치 생성
git checkout -b branch-name : 브런치 생성 후 이동
git branch -d [branch name] : 병합된 브런치 삭제 
git branch -D branch name : 병합되지 않는 브런치 삭제
git branch list : 브런치 목록

git merge branch-name :  fast-forward merge 방식 - 변경되지 않는 base에서  브랜치로 master가 이동
git merge --no-ff [-m "..."] branch-name : 3-way-merge 두 브랜치를 통해 새로운 커밋 생성
git merge --squash branch-name : 브랜치 내용을 적용 후 스테이징 영역으로 이동

git rebase branch-name : 현재 브랜치를 베이스로 해당 브랜치를 재배치
git rebase --absort  ->  충돌 처리  ->  git add .  -> git rebase --continue 

git cherry-pick [hashID] : 다른 브런치의 특정 커밋을 적용 
git cherry-pick --absort  ->  충돌 처리  ->  git add .  -> git cherry-pick --continue 

git push origin branch-name : 브런치를 원격 저장소에 업데이트